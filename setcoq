#!/bin/bash

# The help menu
function print_short_help {
    echo "usage: setcoq [-s directory] [-u directory] [-ss] [-su] [-w] [-h]"
    echo "use --help or -h option for more details"
}

function print_help {
    echo "usage: setcoq [-s directory] [-u directory] [-h]"
    echo "Description:"
    echo "  --set directory, -s directory"
    echo "    Set Coq to the given directory."
    echo "  --unset directory, -u directory"
    echo "    Unset Coq set by this script from the given directory."
    echo "  --which, -w"
    echo "    Display the path to the version of Coq that is currently set."
    echo "  --bare-which, -bw"
    echo "    Same as --which and -w but just prints the path."
    echo "  --selfset, -ss"
    echo "    Set this script so it can be accessed from anywhere."
    echo "  --selfunset, -su"
    echo "    UnSet this script if it is set before."
    echo "  --help, -h"
    echo "    To print this help."
}

# Parse input
# if no argument is specified print help
if [ $# == 0 ]; then
    print_short_help
    exit 0
fi

#initializing the options
ISSET=0
ISUNSET=0
ISSELFSET=0
ISSELFUNSET=0
ISWHICH=0
ISBAREWHICH=0
PTH=
SELFPATH=`realpath $0`
PERMSETPATH="/usr/local/bin/setcoq"

# see if the requested operation is to set Coq or unset it
while [[ $# > 0 ]]; do
    key=$1
    case ${key} in
	--set|-s)
	    ISSET=1
	    PTH=$2
	    shift 2;;
        --unset|-u)
            ISUNSET=1
            PTH=$2
            shift 2;;
        --which|-w)
            ISWHICH=1
            shift 1;;
        --bare-which|-bw)
            ISBAREWHICH=1
            shift 1;;
        --selfset|-ss)
            ISSELFSET=1
            shift 1;;
        --selfunset|-su)
            ISSELFUNSET=1
            shift 1;;
	--help|-h)
	    print_help
	    exit 0;;
	*)
	    echo "Don't know what to do with $1"
	    print_short_help
	    exit 1;;
    esac
    shift
done

# We remove the last / if the argument ends in a /

if [ "${PTH: -1}" == "/" ]; then
    COQP=${PTH:0:`expr ${#PTH} - 1`}
else
    COQP=${PTH}
fi

function setCoq {
    # Check if the given path is indeed a Coq directory
    if [ -d $1 ]; then
	if ! [ -x $1/bin/coqc ]; then
	    echo "Can't find the $1/bin/coqc file!"
	    exit 1
	fi
    else
	echo "The given apth $1 is not a directory!"
	exit 1
    fi

    for f in $1/bin/*; do
      if [ -f $f ]; then
        targ=/usr/local/$(echo $f | sed "s|$1/||g")
        if [ -L ${targ} ]; then
          rm ${targ}
        fi
        if [ -f ${targ} ]; then
          echo "Coq is permanently installed! Please remove first."
          exit 1
        fi
        ln -s ${f} ${targ}
      fi
    done
    # done setting Coq
    echo "Coq is now set to: ${COQP}"
}

function unsetCoq {
    CQPTH=$1
    # Check if the given path is indeed a Coq directory
    if [ -d ${CQPTH} ]; then
	if ! [ -x ${CQPTH}/bin/coqc ]; then
	    echo "Can't find the ${CQPTH}/bin/coqc file!"
	    exit 1
	fi
    else
	echo "The given apth ${CQPTH} is not a directory!"
	exit 1
    fi

     TOREMOVE=

    for f in ${CQPTH}/bin/*; do
      if [ -f $f ]; then
        targ=/usr/local/$(echo $f | sed "s|${CQPTH}/||g")
        if [ -L ${targ} ]; then
          if [ $(readlink ${targ}) = $f ]; then
            TOREMOVE=("${TOREMOVE[@]}" ${targ})
          else
            echo "${CQPTH} is not the path to Coq that is currently set!"
          fi
        else
          if [ -f ${targ} ]; then
            echo "Coq is permanently installed! Please remove first."
            exit 1
          else
            echo "Coq is not (correctly) installed from ${CQPTH}."
            exit 1
          fi
        fi
      fi
    done
    echo "Unsetting will effectively remove the following symlinks:"
    for i in ${TOREMOVE[@]}; do
      echo "  ${i}"
    done
    while true; do
      read -p "Are you sure you want to continue?" yn
      case $yn in
        [Yy]* )
        for i in ${TOREMOVE[@]}; do
          rm ${i}
        done
        break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
      esac
    done
    echo "Coq (set from ${COQP}) is successfully unset."
}


# if the request is to set Coq we set it.
if [ ${ISSET} == 1 -a ${ISUNSET} == 0 -a ${ISSELFSET} == 0 -a ${ISSELFUNSET} == 0 -a ${ISWHICH} == 0 -a ${ISBAREWHICH} == 0 ]; then
    setCoq ${COQP}
elif [ ${ISUNSET} == 0 -a ${ISUNSET} == 1 -a ${ISSELFSET} == 0 -a ${ISSELFUNSET} == 0 -a ${ISWHICH} == 0 -a ${ISBAREWHICH} == 0 ]; then
    unsetCoq ${COQP}
elif [ ${ISUNSET} == 0 -a ${ISSET} == 0 -a ${ISSELFSET} == 1 -a ${ISSELFUNSET} == 0 -a ${ISWHICH} == 0 -a ${ISBAREWHICH} == 0 ]; then
    if [ -L "${PERMSETPATH}" ]; then
	while true; do
	    echo "The file ${PERMSETPATH} already exists and is a symlink to \"$(readlink ${PERMSETPATH})\""
	    read -p "Are you sure you want to continue?" yn
	    case $yn in
		[Yy]* )
		    rm ${PERMSETPATH}
		    ln -s ${SELFPATH} ${PERMSETPATH}
		    echo "Self set was successful. Use \"setcoq\" to run this script from anywhere!"
		    break;;
		[Nn]* ) exit 0;;
		* ) echo "Please answer yes or no.";;
	    esac
	done
    elif [ -e "${PERMSETPATH}" ]; then
	echo "The file ${PERMSETPATH} already exists and is not a symlink!"
	exit 1
    else
	rm -f ${PERMSETPATH}
	ln -s ${SELFPATH} ${PERMSETPATH}
	echo "Self set was successful. Use \"setcoq\" to run this script from anywhere!"
    fi
elif [ ${ISUNSET} == 0 -a ${ISSET} == 0 -a ${ISSELFSET} == 0 -a ${ISSELFUNSET} == 1 -a ${ISWHICH} == 0 -a ${ISBAREWHICH} == 0 ]; then
    if [ -L "${PERMSETPATH}" ]; then
	rm "${PERMSETPATH}"
    elif [ -e "${PERMSETPATH}" ]; then
	echo "The file ${PERMSETPATH} already exists and is not a symlink!"
	exit 1
    else
	rm -f ${PERMSETPATH}
	ln -s ${SELFPATH} ${PERMSETPATH}
	echo "Self set was successful. Use \"setcoq\" to run this script from anywhere!"
    fi
elif [ ${ISUNSET} == 0 -a ${ISSET} == 0 -a ${ISSELFSET} == 0 -a ${ISSELFUNSET} == 0 -a ${ISWHICH} == 1 -a ${ISBAREWHICH} == 0 ]; then
    COQCPATH=`which coqc`
    COQCDIR=`dirname $COQCPATH`
    if [ -z "${COQCPATH}" ]; then
	echo "Coq is not installed!"
	exit 1
    elif [ -L ${COQCPATH} ]; then
    	TARGETCOQCPATH=$(readlink ${COQCPATH})
	TARGETCOQCDIR=`dirname $(dirname $TARGETCOQCPATH)`
	echo "Coq is set to \"$TARGETCOQCDIR\"."
    else
	echo "Coq is permanently installed in $COQCDIR."
    fi
elif [ ${ISUNSET} == 0 -a ${ISSET} == 0 -a ${ISSELFSET} == 0 -a ${ISSELFUNSET} == 0 -a ${ISWHICH} == 0 -a ${ISBAREWHICH} == 1 ]; then
    COQCPATH=`which coqc`
    COQCDIR=`dirname $COQCPATH`
    if [ -z "${COQCPATH}" ]; then
	echo "Coq is not installed!"
	exit 1
    elif [ -L ${COQCPATH} ]; then
    	TARGETCOQCPATH=$(readlink ${COQCPATH})
	TARGETCOQCDIR=`dirname $(dirname $TARGETCOQCPATH)`
	echo $TARGETCOQCDIR
    else
	echo $COQCDIR
    fi
else
    echo "Mixing options is not valid!"
    exit 1
fi
